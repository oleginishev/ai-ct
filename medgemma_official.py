#!/usr/bin/env python3
"""
MedGemma - –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
"""

import os
import torch
from transformers import pipeline
from PIL import Image
import requests

MODEL_PATH = "/app/models/medgemma_4b"

def main():
    """–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä MedGemma"""
    print('üè• MedGemma 4B - –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä')
    print('=' * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª—å
    if not os.path.exists(MODEL_PATH):
        print(f'‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ {MODEL_PATH}')
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º GPU
    device = "cuda" if torch.cuda.is_available() else "cpu"
    print(f'üñ•Ô∏è  –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {device}')
    
    if device == "cuda":
        print(f'‚úÖ GPU: {torch.cuda.get_device_name(0)}')
        print(f'üíæ –ü–∞–º—è—Ç—å: {torch.cuda.get_device_properties(0).total_memory / 1024**3:.1f} GB')
    
    try:
        # –°–æ–∑–¥–∞–µ–º pipeline —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        print('üîÑ –°–æ–∑–¥–∞–µ–º pipeline...')
        pipe = pipeline(
            "image-text-to-text",
            model=MODEL_PATH,
            torch_dtype=torch.bfloat16,
            device=device,
        )
        
        print('‚úÖ Pipeline —Å–æ–∑–¥–∞–Ω!')
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        print('\nüì∑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...')
        image_url = "https://upload.wikimedia.org/wikipedia/commons/c/c8/Chest_Xray_PA_3-8-2010.png"
        image = Image.open(requests.get(image_url, headers={"User-Agent": "example"}, stream=True).raw)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        messages = [
            {
                "role": "system",
                "content": [{"type": "text", "text": "You are an expert radiologist."}]
            },
            {
                "role": "user",
                "content": [
                    {"type": "text", "text": "Describe this X-ray"},
                    {"type": "image", "image": image}
                ]
            }
        ]
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        print('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...')
        output = pipe(text=messages, max_new_tokens=200)
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        result = output[0]["generated_text"][-1]["content"]
        
        print(f'\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢:')
        print('=' * 50)
        print(result)
        print('=' * 50)
        
        print('\nüéâ MedGemma —Ä–∞–±–æ—Ç–∞–µ—Ç!')
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
